// This file was auto-generated by Fern from our API Definition.

package api

import (
	core "github.com/codecombat/codecombat-go/core"
)

type ClassroomsCreateRequest struct {
	// Name of the classroom
	Name      string                            `json:"name"`
	OwnerId   ObjectIdString                    `json:"ownerID"`
	AceConfig *ClassroomsCreateRequestAceConfig `json:"aceConfig,omitempty"`
}

type ClassroomsEnrollUserInCourseRequest struct {
	// limit the return number of members for the classroom, the default value is 1000
	RetMemberLimit *float64       `json:"-"`
	UserId         ObjectIdString `json:"userId"`
}

type ClassroomsGetRequest struct {
	// The classroom's `code`.
	Code string `json:"-"`
	// limit the return number of members for the classroom
	RetMemberLimit *float64 `json:"-"`
}

type ClassroomsGetMembersStatsRequest struct {
	// If specified, include only the specified projection of returned stats; else, return all stats. Format as a comma-separated list, like `creator,playtime,state.complete`.
	Project *string `json:"-"`
	// Limit the return member number. the default value is 10, and the max value is 100
	MemberLimit *float64 `json:"-"`
	// Skip the members that doesn't need to return, for pagination
	MemberSkip *float64 `json:"-"`
}

type ClassroomsRemoveEnrolledUserRequest struct {
	// limit the return number of members for the classroom, the default value is 1000
	RetMemberLimit *float64       `json:"-"`
	UserId         ObjectIdString `json:"userId"`
}

type ClassroomsRemoveMemberRequest struct {
	// The `_id` or `slug` of the user to remove from the class.
	UserId string `json:"userId"`
	// limit the return number of members for the classroom, the default value is 1000
	RetMemberLimit *core.Optional[float64] `json:"retMemberLimit,omitempty"`
}

// Subset of properties listed here
type ClassroomResponse struct {
	Id          *ObjectIdString                 `json:"_id,omitempty"`
	Name        *string                         `json:"name,omitempty"`
	Members     []ObjectIdString                `json:"members,omitempty"`
	OwnerId     *ObjectIdString                 `json:"ownerID,omitempty"`
	Description *string                         `json:"description,omitempty"`
	Courses     []*ClassroomResponseCoursesItem `json:"courses,omitempty"`
}

type ClassroomsCreateRequestAceConfig struct {
	// Programming language for the classroom
	Language *string `json:"language,omitempty"`
}

type ClassroomsGetMembersStatsResponseItem struct {
	Id    *ObjectIdString                             `json:"_id,omitempty"`
	Stats *ClassroomsGetMembersStatsResponseItemStats `json:"stats,omitempty"`
}

type LevelSessionResponse struct {
	State *LevelSessionResponseState `json:"state,omitempty"`
	Level *LevelSessionResponseLevel `json:"level,omitempty"`
	// Level slug like `wakka-maul`
	LevelId *string         `json:"levelID,omitempty"`
	Creator *ObjectIdString `json:"creator,omitempty"`
	// Time played in seconds.
	Playtime           *int            `json:"playtime,omitempty"`
	Changed            *DatetimeString `json:"changed,omitempty"`
	Created            *DatetimeString `json:"created,omitempty"`
	DateFirstCompleted *DatetimeString `json:"dateFirstCompleted,omitempty"`
	// For arenas. Whether or not the level has been added to the ladder.
	Submitted *bool `json:"submitted,omitempty"`
	// For shareable projects. Whether or not the project has been shared with classmates.
	Published *bool `json:"published,omitempty"`
}

type ClassroomsUpsertMemberRequest struct {
	// The code for joining this classroom
	Code string `json:"code"`
	// The `_id` or `slug` of the user to add to the class.
	UserId string `json:"userId"`
	// limit the return number of members for the classroom, the default value is 1000
	RetMemberLimit *core.Optional[float64] `json:"retMemberLimit,omitempty"`
}
